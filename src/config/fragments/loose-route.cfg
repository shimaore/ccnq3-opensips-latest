# Name: loose-route
# Group: loose-route
# Description: handler for loose-routed messages

# -----------------------------------------------------------------
# Loose Route Section
# -----------------------------------------------------------------

define loose_route

route[loose_route_handler] {
  xlog("L_INFO","$Tf -- loose-route-handler -- LR $rm From: $fu To: $tu RURI: $ru\n");

  ## --- NAT

  route(lr_nat);

  if(
  # REGISTER should never be LR. (At least clearly in the cases we support, i.e. `colocated` or `ignore`.)
     is_method("REGISTER")
  # OPTIONS we only reply locally. Should never be LR either.
  || is_method("OPTIONS")
  # SUBSCRIBE we also catch locally.
  || is_method("SUBSCRIBE")
  # MESSAGE should be out-of-dialog & therefor NLR
  || is_method("MESSAGE")
  # PUBLISH should be out-of-dialog
  || is_method("PUBLISH")
  ) {
    send_reply("403", "Invalid method");
    # TBD report troublemaker
    exit;
  }

  # That leaves us with:
  #   INVITE -- LR on re-INVITE
  #   ACK    -- LR on re-INVITE
  #   BYE    -- always LR
  #   CANCEL -- LR on re-INVITE
  #   PRACK  -- LR on re-INVITE
  #   UPDATE -- LR on in-dialog
  #   INFO   -- always LR
  #   REFER  -- LR when in-dialog (but we do not support dialog-creating REFER which is out-of-dialog)
  #   NOTIFY -- LR when in-dialog (propagates Event(s) for REFER)

  # Loose-route should only apply to dialogs, correct?
  # Well it applies to Record-Routed that have `lr`. These are in turn generated when we call record_route() in which case the To-tag is always known.
  # For example this might be on a re-INVITE. Although an initial ACK will not have a Route header (hence no LR) but will have a To-tag (which was provided by 18x, 200, 4xx, ...), the ACK for a re-INVITE will be in-dialog and will have LR. BYE on the other hand will always be in-dialog, have To-tag, and be LR.

  if(!has_totag()) {
    xlog("L_INFO","$Tf -- LR: loose-route but no to_tag\n");
    if(!is_method("ACK")) {
      send_reply("403", "Missing To tag");
    }
    # TBD report troublemaker
    exit;
  }

  if($DLG_status==NULL) {
    xlog("L_INFO","$Tf -- LR: to_tag but no dialog\n");
    if(!is_method("ACK")) {
      send_reply("403", "No such dialog");
    }
    # TBD report troublemaker
    exit;
  }

  if(!validate_dialog()) {
    if(is_method("BYE") || is_method("NOTIFY")) {
      fix_route_dialog();
    } else {
      if fix_invalid_dialogs
        fix_route_dialog();
      end if fix_invalid_dialogs
      if not fix_invalid_dialogs
        if(!is_method("ACK")) {
          send_reply("403", "Invalid dialog");
          # TBD report troublemaker
        }
        exit;
      end if not fix_invalid_dialogs
    }
  }

  xlog("L_INFO","$Tf -- LR: Dialog validated or fixed\n");

  if(!is_method("ACK")) {
    send_reply("100", "Trying");
  }

  # re-INVITE
  if(is_method("INVITE")) {
    ## On re-INVITE via ocs-sbc we do not get the proper fields.
    ## Disabling authentication for now until I figure out how to do this properly.
    # route(authenticate);
    record_route();
    t_on_reply("loose_route_invite");
  } else {
    t_on_reply("loose_route");
  }

  ## --- Media

  if(is_method("ACK") || is_method("CANCEL") || is_method("PRACK") || is_method("UPDATE")) {
    route(forwarder_progress); # Route ACK/PRACK/CANCEL/UPDATE
  } else {
    route(forwarder);
  }
}


onreply_route[loose_route_invite]
{
  xlog("L_INFO","$Tf -- onreply_route(loose_route_invite) -- $si:$sp -- \n$mb\n");

  # SDP mangling: Linksys SPA2102 improper SDP
  replace_body_all("a=rtpmap:18 G729a/8000", "a=rtpmap:18 G729/8000");

  if has_onreply_nat
  route(onreply_nat);
  end if has_onreply_nat
}

onreply_route[loose_route]
{
  xlog("L_INFO","$Tf -- onreply_route(loose_route) -- $si:$sp -- \n$mb\n");

  if has_onreply_nat
  route(onreply_nat);
  end if has_onreply_nat
}
